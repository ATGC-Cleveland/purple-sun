the JSON Schema ONLY needs to concern itself with the data that will be passed in the JSON data block
presentational elements will be conformed to the form block of the JSON Form structure

behavioral economics - incentivizing behavior

Name
Birthdate
Age
Biological Sex
Gender
Address
City
State
Zip
County
Race
Ethnicity

How to create questions that combine race and ethnicity:

Most clients don't clearly understand the distinction between Race and Ethnicity.
How do we create questions that determine the answer to both questions?

Challenges:

1) When African-American youth are offered the opportunity to select BOTH Black/African-American and Hispanic/Latino they have a higher tendency to select both as anecdotlly desirable racial identity (similar situations have occured when Native American is included as an option alone rather than grouped with Alaskan Native as it appears on OMB documentation)
2) Anecdotally I would suggest that ALL youth who identify as Hispanic as an ehtnicity also would qualify as Black (however, not African-American). These youth tend to be of Afro-Latino groups (Puerto Rican, Cuban, Dominican, Bajan, etc). This seems to relegated to all Carribean cultures, except Jamaican and doesn't remotely address those of Haitian or Mexican descent - which locally is rare but could become significant if this process becomes more widely adopted. However, the interpretation by youth of this is based primarily on skin color rather than georgraphical heritage. White (race) and Hispanic (ethnicity) is Puerto Rican, Cuban, Mexican and South American nationalities. Black (race) and Hispanic (ethnicity) are Dominican and Bajan - still no connections for Jamaican or Haitian.
3) I would continue to group all local Hispanic (ethnicity) identified youth as Black and leave White (race) Hispanic (ethnicity) to Continental Hispanic (Spanish, Porteguese and many South American cultures).

Would you be able to answer these questions if they were written in Spanish?
Would you prefer these questions to be asked in Spanish?

sc_matrix
	ethnic group (select the primary ethnic group with which you identify - combined elements of cultural heritage, national origin or identification, etc)
	racial group (select one or more racial groups with which you identify)
	ehtnicity keyword is extrapolated from this information

SNIPPETS

$traverse_data = new RecursiveArrayIterator( $data->properties );
		
		foreach ( new RecursiveIteratorIterator( $traverse_data , 2 ) as $key => $value ) {
			
			if ( $key == '$ref' ) {
				echo '<p style="margin: 10px;">I found a JSON ref pointer!</p>';
			}
			
		}
		
$traverse_data = new RecursiveArrayIterator( $schema->schema->properties );

var_dump( $traverse_data->key() )

var_dump( $traverse_data->getChildren() );

$traverse_data->next();

var_dump( $traverse_data->getChildren() );

//$traverse_data = new ArrayObject( $traverse_data );

//$iter = new RecursiveIteratorIterator( $traverse_data );

/*foreach ( $iter as $key => $value ) {

	if ( $key == '$ref' ) {
		echo '<p style="margin: 10px;">I found a JSON ref pointer!</p>';
	}
	
}*/

		if ( isset( $json_obj->schema ) ) {
		
			// we are at the root level of properties
			
			// var_dump($path);
			
			foreach ( $json_obj->$path[0]->$path[1] as $node => $value ) {
				
				if ( isset( $value->properties ) ) {
				
					//echo $key . ' has additional properties.<br />';
					
					$path[] = $node;
					
					$this->json_locate_refs( $value , $node , $path );
					
				}
				
				if ( isset( $value->{'$ref'} ) ) {
				
					//echo 'I found a JSON ref pointer in ' . $key . '.<br />';
					
					$ref_parsed = $this->json_parse_ref( $value->{'$ref'} );    // need to handle nodes
					
					array_push( $path , $node );
					
					//$ref_schema = $this->json_expand_ref( $ref_parsed , $path );
					
					//$json_obj->schema->properties->$node = $ref_schema->properties;
					
				}
			}
			
		} else {
		
			foreach ( $json_obj->properties as $node => $value ) {
			
				//var_dump($node);
				//var_dump($value);
				
				if ( isset( $value->properties ) ) {
				
					//echo $node . ' has additional properties.<br />';
					
					$path[] = $node;
					
					$this->json_locate_refs( $value , $node , $path );
					
				}
				
				if ( $node == '$ref' ) {
				
					//echo 'I found a JSON ref pointer in ' . $header . '.<br />';
					
				}
				
			}
			
		}
		
		//var_dump($schema_obj);

	/**
		 *    found a ref pointer...now need to find the file
		 *    The file location should be a string value
		 *    Will always be contained in the 'schemas' folder of the theme directory.
		 *    Needs to handle uri's that are in subfolders.
		 *    Needs to only search for external file if pointer doesn't start with #.
		 *    RULE: ref pointer objects will be found under 'definitions' object when ref pointer starts
		 *          with # and is located in the same document.
		 *    RULE: All external schema URI's will be relative to the 'schema' directory.
		 *    RULE: External schemas with multiple definitions will be references by a pointer structured as
		 *          schema.json#definition
		 *    TODO: Need code to handle these three different situations.
		 */